{"ast":null,"code":"//Definitions\nconst LOAD = '/habits/LOAD'; //Actions\n\nconst load = habitList => ({\n  type: LOAD,\n  habitList\n}); //Thunks\n\n\nexport const getHabits = () => async dispatch => {\n  const response = await fetch(`/api/habits`);\n\n  if (response.ok) {\n    const habitList = await response.json();\n    dispatch(load(habitList));\n  }\n}; //Reducer\n//make sure to define initialState or remove the default variable\n\nlet initialState = {};\nexport default function habitsReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOAD:\n      {\n        const allHabits = {};\n        action.habitList.habits.forEach(habit => {\n          allHabits[habit.id] = habit;\n        });\n        return { ...state,\n          ...allHabits\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/satori/iCloud Drive (Archive)/Desktop/AppAcademy/My_Cohort/MOD6/Group/routinica/skeleton/react-app/src/store/habits.js"],"names":["LOAD","load","habitList","type","getHabits","dispatch","response","fetch","ok","json","initialState","habitsReducer","state","action","allHabits","habits","forEach","habit","id"],"mappings":"AAAA;AACA,MAAMA,IAAI,GAAG,cAAb,C,CAEA;;AACA,MAAMC,IAAI,GAAGC,SAAS,KAAK;AACvBC,EAAAA,IAAI,EAAEH,IADiB;AAEvBE,EAAAA;AAFuB,CAAL,CAAtB,C,CAKA;;;AACA,OAAO,MAAME,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC/C,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAF,CAA5B;;AACA,MAAID,QAAQ,CAACE,EAAb,EAAgB;AACZ,UAAMN,SAAS,GAAG,MAAMI,QAAQ,CAACG,IAAT,EAAxB;AACAJ,IAAAA,QAAQ,CAACJ,IAAI,CAACC,SAAD,CAAL,CAAR;AACH;AACJ,CANM,C,CAQP;AACA;;AACA,IAAIQ,YAAY,GAAG,EAAnB;AACA,eAAe,SAASC,aAAT,CAAuBC,KAAK,GAAGF,YAA/B,EAA6CG,MAA7C,EAAqD;AAChE,UAAOA,MAAM,CAACV,IAAd;AACI,SAAKH,IAAL;AAAW;AACX,cAAMc,SAAS,GAAG,EAAlB;AACID,QAAAA,MAAM,CAACX,SAAP,CAAiBa,MAAjB,CAAwBC,OAAxB,CAAgCC,KAAK,IAAI;AACrCH,UAAAA,SAAS,CAACG,KAAK,CAACC,EAAP,CAAT,GAAsBD,KAAtB;AACH,SAFD;AAGA,eAAO,EAAC,GAAGL,KAAJ;AAAW,aAAGE;AAAd,SAAP;AACH;;AACD;AACI,aAAOF,KAAP;AATR;AAWH","sourcesContent":["//Definitions\nconst LOAD = '/habits/LOAD'\n\n//Actions\nconst load = habitList => ({\n    type: LOAD,\n    habitList\n})\n\n//Thunks\nexport const getHabits = () => async (dispatch) => {\n    const response = await fetch(`/api/habits`)\n    if (response.ok){\n        const habitList = await response.json()\n        dispatch(load(habitList))\n    }\n}\n\n//Reducer\n//make sure to define initialState or remove the default variable\nlet initialState = {}\nexport default function habitsReducer(state = initialState, action) {\n    switch(action.type){\n        case LOAD: {\n        const allHabits = {}\n            action.habitList.habits.forEach(habit => {\n                allHabits[habit.id] = habit\n            })\n            return {...state, ...allHabits}\n        }\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}