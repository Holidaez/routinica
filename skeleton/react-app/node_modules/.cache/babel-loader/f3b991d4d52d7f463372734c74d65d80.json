{"ast":null,"code":"var _jsxFileName = \"/Users/satori/iCloud Drive (Archive)/Desktop/AppAcademy/My_Cohort/MOD6/Group/routinica/skeleton/react-app/src/components/Routines/ToDos/ToDos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getToDos } from '../../../store/todos';\nimport './todo.css';\nimport '../routines.css'; //TODO: Complete logic to split the checklist.\n//Conditionally render the optional elements. (completed - notes, checklist).\n//Give appropriate class names to each of the elements on the todo cards.\n//Complete logic and functionality for the cards and buttons.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDo() {\n  _s();\n\n  const dispatch = useDispatch();\n  const currentToDoList = useSelector(state => {\n    return Object.values(state.todos);\n  }); // console.log(currentToDoList)\n\n  useEffect(() => {\n    dispatch(getToDos());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"routines-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      href: \"https://fonts.googleapis.com/css?family=Varela Round\",\n      rel: \"stylesheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"add-routine\",\n      placeholder: \"Add a ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), currentToDoList.map(todo => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-checkbox-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"todo-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hidden\",\n            placeholder: \"\\u2714\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-info-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-card-title\",\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), todo.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-card-notes\",\n            children: todo.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this), todo.checklist && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-card-checklist\",\n            children: todo.checklist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, `to-${todo.id}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToDo, \"pEWLa7cFPghk1Y9bCaCS7byzHdE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/Users/satori/iCloud Drive (Archive)/Desktop/AppAcademy/My_Cohort/MOD6/Group/routinica/skeleton/react-app/src/components/Routines/ToDos/ToDos.js"],"names":["React","useState","useEffect","useDispatch","useSelector","getToDos","ToDo","dispatch","currentToDoList","state","Object","values","todos","map","todo","title","notes","checklist","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAO,YAAP;AACA,OAAO,iBAAP,C,CAEA;AACA;AACA;AACA;;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,eAAe,GAAGJ,WAAW,CAACK,KAAK,IAAI;AACzC,WAAOC,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACG,KAApB,CAAP;AACH,GAFkC,CAAnC,CAFY,CAKZ;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,QAAQ,CAACF,QAAQ,EAAT,CAAR;AACH,GAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACI;AAAM,MAAA,IAAI,EAAC,sDAAX;AAAkE,MAAA,GAAG,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,WAAW,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKC,eAAe,CAACK,GAAhB,CAAoBC,IAAI,IAAI;AACzB,0BACI;AAA2B,QAAA,SAAS,EAAC,WAArC;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,kCACI;AAAQ,YAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAC,QAAlB;AAA2B,YAAA,WAAW,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,sBAAkCA,IAAI,CAACC;AAAvC;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKD,IAAI,CAACE,KAAL,iBACG;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,sBAAkCF,IAAI,CAACE;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAHR,EAKKF,IAAI,CAACG,SAAL,iBACG;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,sBAAsCH,IAAI,CAACG;AAA3C;AAAA;AAAA;AAAA;AAAA,kBANR;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA,SAAW,MAAKH,IAAI,CAACI,EAAG,EAAxB;AAAA;AAAA;AAAA;AAAA,cADJ;AAkBH,KAnBA,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GApCQZ,I;UACYH,W,EACOC,W;;;KAFnBE,I;AAsCT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getToDos } from '../../../store/todos'\nimport './todo.css'\nimport '../routines.css'\n\n//TODO: Complete logic to split the checklist.\n//Conditionally render the optional elements. (completed - notes, checklist).\n//Give appropriate class names to each of the elements on the todo cards.\n//Complete logic and functionality for the cards and buttons.\n\nfunction ToDo() {\n    const dispatch = useDispatch()\n    const currentToDoList = useSelector(state => {\n        return Object.values(state.todos)\n    })\n    // console.log(currentToDoList)\n    useEffect(() => {\n        dispatch(getToDos())\n    }, [dispatch])\n\n    return (\n        <div className='routines-container'>\n            <link href='https://fonts.googleapis.com/css?family=Varela Round' rel='stylesheet'></link>\n            <input className='add-routine' placeholder='Add a ToDo' />\n            {currentToDoList.map(todo => {\n                return (\n                    <div key={`to-${todo.id}`} className='todo-card'>\n                        <div className='todo-checkbox-container'>\n                            <button className='todo-checkbox' />\n                            <button className='hidden' placeholder='âœ”' />\n                        </div>\n\n                        <div className='todo-info-container'>\n                            <div className='todo-card-title'>{todo.title}</div>\n                            {todo.notes && (\n                                <div className='todo-card-notes'>{todo.notes}</div>\n                            )}\n                            {todo.checklist && (\n                                <div className='todo-card-checklist'>{todo.checklist}</div>\n                            )}\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}