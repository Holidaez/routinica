{"ast":null,"code":"var _jsxFileName = \"/Users/satori/iCloud Drive (Archive)/Desktop/AppAcademy/My_Cohort/MOD6/Group/routinica/skeleton/react-app/src/components/auth/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../../store/session';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const [errors, setErrors] = useState([]);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const user = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n\n  const onLogin = async e => {\n    e.preventDefault();\n    console.log(\"demo@aa.io\" === email);\n    const data = await dispatch(login(email, password));\n\n    if (data) {\n      setErrors(data);\n    }\n  };\n\n  const updateEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const updatePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: errors.map((error, ind) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: updateEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: updatePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"XSjv/uKpmnVLBD5IcbTq+xB5gjg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/satori/iCloud Drive (Archive)/Desktop/AppAcademy/My_Cohort/MOD6/Group/routinica/skeleton/react-app/src/components/auth/LoginForm.js"],"names":["React","useState","useSelector","useDispatch","Redirect","login","LoginForm","errors","setErrors","email","setEmail","password","setPassword","user","state","session","dispatch","onLogin","e","preventDefault","console","log","data","updateEmail","target","value","updatePassword","map","error","ind"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,KAAT,QAAsB,qBAAtB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMY,IAAI,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcF,IAAxB,CAAxB;AACA,QAAMG,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,QAAMc,OAAO,GAAG,MAAOC,CAAP,IAAa;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBZ,KAA7B;AACA,UAAMa,IAAI,GAAG,MAAMN,QAAQ,CAACX,KAAK,CAACI,KAAD,EAAQE,QAAR,CAAN,CAA3B;;AACA,QAAIW,IAAJ,EAAU;AACRd,MAAAA,SAAS,CAACc,IAAD,CAAT;AACD;AACF,GAPD;;AASA,QAAMC,WAAW,GAAIL,CAAD,IAAO;AACzBR,IAAAA,QAAQ,CAACQ,CAAC,CAACM,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAIR,CAAD,IAAO;AAC5BN,IAAAA,WAAW,CAACM,CAAC,CAACM,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAIA,MAAIZ,IAAJ,EAAU;AACR,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAM,IAAA,QAAQ,EAAEI,OAAhB;AAAA,4BACE;AAAA,gBACGV,MAAM,CAACoB,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,kBACV;AAAA,kBAAgBD;AAAhB,SAAUC,GAAV;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,OAHd;AAIE,QAAA,KAAK,EAAEpB,KAJT;AAKE,QAAA,QAAQ,EAAEc;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAgBE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,KAAK,EAAEZ,QAJT;AAKE,QAAA,QAAQ,EAAEe;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA1DD;;GAAMpB,S;UAISJ,W,EACIC,W;;;KALbG,S;AA4DN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../../store/session';\n\nconst LoginForm = () => {\n  const [errors, setErrors] = useState([]);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const user = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n\n  const onLogin = async (e) => {\n    e.preventDefault();\n    console.log(\"demo@aa.io\" === email)\n    const data = await dispatch(login(email, password));\n    if (data) {\n      setErrors(data);\n    }\n  };\n\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  if (user) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <form onSubmit={onLogin}>\n      <div>\n        {errors.map((error, ind) => (\n          <div key={ind}>{error}</div>\n        ))}\n      </div>\n      <div>\n        <label htmlFor='email'>Email</label>\n        <input\n          name='email'\n          type='text'\n          placeholder='Email'\n          value={email}\n          onChange={updateEmail}\n        />\n      </div>\n      <div>\n        <label htmlFor='password'>Password</label>\n        <input\n          name='password'\n          type='password'\n          placeholder='Password'\n          value={password}\n          onChange={updatePassword}\n        />\n        <button type='submit'>Login</button>\n      </div>\n    </form>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}