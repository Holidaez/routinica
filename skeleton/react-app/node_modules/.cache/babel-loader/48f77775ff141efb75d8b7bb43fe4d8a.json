{"ast":null,"code":"var _jsxFileName = \"/Users/satori/iCloud Drive (Archive)/Desktop/AppAcademy/My_Cohort/MOD6/Group/routinica/skeleton/react-app/src/components/Routines/Habits/Habit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getHabits } from '../../../store/habits';\nimport './habits.css';\nimport '../routines.css'; //TODO:\n//Conditionally render the optional elements. (completed - notes, checklist).\n//Give appropriate class names to each of the elements on the todo cards.\n//Complete logic and functionality for the cards and buttons.\n//Add a css file and basic styling (conditional class rendering for colors of buttons depending on )\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Habit() {\n  _s();\n\n  const dispatch = useDispatch();\n  const currentHabitList = useSelector(state => {\n    return Object.values(state.habits);\n  }); // console.log(currentHabitList)\n\n  useEffect(() => {\n    dispatch(getHabits());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"routines-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"add-routine\",\n      placeholder: \"Add a Habit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), currentHabitList.map(habit => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"habit-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"habit-plus-minus\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"habit-plus-button\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"habit-info-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"habit-title\",\n            children: habit.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 63\n          }, this), habit.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"habit-notes\",\n            children: habit.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), habit.positive_counter && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"positive-counter\",\n          children: [\"+\", habit.positive_counter]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this), habit.negative_counter && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"negative-counter\",\n          children: [\"-\", habit.negative_counter]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"habit-plus-minus\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"habit-minus-button\",\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, `hab-${habit.id}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Habit, \"BAuYU8yHY5G+nMMEArLfU8RvhPQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Habit;\nexport default Habit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Habit\");","map":{"version":3,"sources":["/Users/satori/iCloud Drive (Archive)/Desktop/AppAcademy/My_Cohort/MOD6/Group/routinica/skeleton/react-app/src/components/Routines/Habits/Habit.js"],"names":["React","useState","useEffect","useDispatch","useSelector","getHabits","Habit","dispatch","currentHabitList","state","Object","values","habits","map","habit","title","notes","positive_counter","negative_counter","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAO,cAAP;AACA,OAAO,iBAAP,C,CACA;AACA;AACA;AACA;AACA;;;;AAGA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,gBAAgB,GAAGJ,WAAW,CAACK,KAAK,IAAI;AAC1C,WAAOC,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACG,MAApB,CAAP;AACH,GAFmC,CAApC,CAFa,CAKb;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,QAAQ,CAACF,SAAS,EAAV,CAAR;AACH,GAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,WAAW,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKC,gBAAgB,CAACK,GAAjB,CAAqBC,KAAK,IAAI;AAC3B,0BACI;AAA6B,QAAA,SAAS,EAAC,YAAvC;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCAAsC;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBAA8BA,KAAK,CAACC;AAApC;AAAA;AAAA;AAAA;AAAA,kBAAtC,EACCD,KAAK,CAACE,KAAN,iBACG;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBAA8BF,KAAK,CAACE;AAApC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAQKF,KAAK,CAACG,gBAAN,iBACG;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,0BAAoCH,KAAK,CAACG,gBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,gBATR,EAWKH,KAAK,CAACI,gBAAN,iBACG;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,0BAAoCJ,KAAK,CAACI,gBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZR,eAcI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA,SAAW,OAAMJ,KAAK,CAACK,EAAG,EAA1B;AAAA;AAAA;AAAA;AAAA,cADJ;AAoBH,KArBA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GAtCQb,K;UACYH,W,EACQC,W;;;KAFpBE,K;AAwCT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getHabits } from '../../../store/habits'\nimport './habits.css'\nimport '../routines.css'\n//TODO:\n//Conditionally render the optional elements. (completed - notes, checklist).\n//Give appropriate class names to each of the elements on the todo cards.\n//Complete logic and functionality for the cards and buttons.\n//Add a css file and basic styling (conditional class rendering for colors of buttons depending on )\n\n\nfunction Habit() {\n    const dispatch = useDispatch()\n    const currentHabitList = useSelector(state => {\n        return Object.values(state.habits)\n    })\n    // console.log(currentHabitList)\n    useEffect(() => {\n        dispatch(getHabits())\n    }, [dispatch])\n\n\n    return (\n        <div className='routines-container'>\n            <input className='add-routine' placeholder='Add a Habit' />\n            {currentHabitList.map(habit => {\n                return (\n                    <div key={`hab-${habit.id}`} className='habit-card'>\n                        <div className='habit-plus-minus'>\n                            <button className='habit-plus-button'>+</button>\n                        </div>\n                        <div className='habit-info-container'><div className='habit-title'>{habit.title}</div>\n                        {habit.notes && (\n                            <div className='habit-notes'>{habit.notes}</div>\n                        )}</div>\n                        {habit.positive_counter && (\n                            <div className='positive-counter'>+{habit.positive_counter}</div>\n                        )}\n                        {habit.negative_counter && (\n                            <div className='negative-counter'>-{habit.negative_counter}</div>\n                        )}\n                        <div className='habit-plus-minus'>\n                            <button className='habit-minus-button'>-</button>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Habit;\n"]},"metadata":{},"sourceType":"module"}